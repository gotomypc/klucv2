<Window x:Class="ffp.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ffp"
    xmlns:toolkit="http://schemas.microsoft.com/wpf/2008/toolkit"
    Title="Facial Expression Recognition" Height="367.5" Width="882.5"
    WindowStartupLocation="CenterScreen" Closing="Window_Closing" x:Name="self">

    <Window.Resources>
        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        </Style>

        <!-- For DataGrid Validation. -->
        <Style x:Key="RowStyle" TargetType="{x:Type toolkit:DataGridRow}">
            <Setter Property="ValidationErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <Ellipse Width="12" Height="12" Fill="Red" Stroke="Black" StrokeThickness="0.5"/>
                            <TextBlock FontWeight="Bold" Padding="4,0,0,0" Margin="0" VerticalAlignment="Top" Foreground="White" Text="!" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="BorderThickness" Value="2"/>
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Grid>
        <Grid.Background>
            <SolidColorBrush Color="DarkCyan"></SolidColorBrush>
        </Grid.Background>

        <Menu Height="23" VerticalAlignment="Top">
            <MenuItem Header="_File" InputGestureText="Ctrl+F">
                <MenuItem Header="_Open" Name="fileOpenMenuItem" Click="processStill_Click" InputGestureText="Ctrl+O"></MenuItem>
                <Separator></Separator>
                <MenuItem Header="E_xit" InputGestureText="Ctrl+X" Click="closeApplication" />
            </MenuItem>
            <MenuItem Header="Op_tions" InputGestureText="Ctrl+T">
                <MenuItem Name="showExpertOptionsMenuItem" Click="optionsMenuToggled_Click" Header="Show Expert Options" IsChecked="True" IsCheckable="True" />
                <MenuItem Name="drawAnthropometricPointsMenuItem" Click="optionsMenuToggled_Click"  Header="Draw Anthropometric Points" IsChecked="True" IsCheckable="True" />
                <MenuItem Name="drawSearchRectanglesMenuItem" Click="optionsMenuToggled_Click" Header="Draw Search Rectangles" IsChecked="False" IsCheckable="True" />
                <MenuItem Name="drawFaceRectangleMenuItem" Click="optionsMenuToggled_Click" Header="Draw Face Rectangle" IsChecked="True" IsCheckable="True" />
                <MenuItem Name="drawDetectionTimeMenuItem" Click="optionsMenuToggled_Click" Header="Draw Detection Time" IsChecked="True" IsCheckable="True" />
                <MenuItem Name="drawFeaturePointsMenuItem" Click="optionsMenuToggled_Click" Header="Draw Feature Points MenuItem" IsChecked="False" IsCheckable="True" />
                <Separator></Separator>
                <MenuItem Name="doEyeProcessingMenuItem" Click="optionsMenuToggled_Click" Header="Do Eye Processing" IsChecked="False" IsCheckable="True" />
                <MenuItem Name="doMouthProcessingMenuItem" Click="optionsMenuToggled_Click" Header="Do Mouth Processing" IsChecked="True" IsCheckable="True" />
                <MenuItem Name="doVisualDebugMenuItem" Click="optionsMenuToggled_Click" Header="Do Visual Debug" IsChecked="False" IsCheckable="True" />
            </MenuItem>
            <MenuItem Header="Process" Name="processMenu">
                <MenuItem Header="Video" Name="processVideoMenuItem" IsEnabled="False" Click="processVideo_Click"/>
                <MenuItem Header="Still Image(s)" Name="processStillMenuItem" Click="processStill_Click"/>
                <MenuItem Header="Camera" Name="processCameraMenuItem" Click="processCamera_Click"/>
                <Separator></Separator>
                <MenuItem Header="Process interval">
                    <StackPanel Orientation="Horizontal">
                        <TextBox Name="processInterval">50</TextBox>
                        <Label>ms</Label>
                    </StackPanel>
                </MenuItem>
                <MenuItem Header="Stop processing" ToolTip="This will only affect video or camera processing" Name="processStopMenuItem" Click="processStopMenuItem_Click"/>
            </MenuItem>
            <MenuItem Header="Training" Name="trainMenu">
                <MenuItem Header="Start Training" Name="startTrainingMenuItem" Click="startTrainingMenuItem_Click"/>
                <MenuItem Header="Stop Training" IsEnabled="False" Name="stopTrainingMenuItem" Click="stopTrainingMenuItem_Click"/>
            </MenuItem>
            <MenuItem Header="_Info" InputGestureText="Ctrl+I">
                <MenuItem Header="_About" InputGestureText="Ctrl+A"/>
            </MenuItem>
        </Menu>

        <StatusBar Height="23" Name="statusBar1" VerticalAlignment="Bottom">
            <StatusBarItem>
                <TextBlock Name="statusText">Ready</TextBlock>
            </StatusBarItem>
        </StatusBar>

        <TabControl ClipToBounds="False" SnapsToDevicePixels="False" Margin="6,29,6,29">
            <TabItem Name="analyseTabItem" Header="Analyze">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Border Background="DimGray" Margin="6" BorderBrush="LightGray" BorderThickness="2">
                            <Image Name="image1" Width="Auto" Height="Auto" Stretch="Uniform" />
                        </Border>
                        <!--<Border Background="DimGray" Margin="10" BorderBrush="DarkGray" BorderThickness=".0,.0,2,2" CornerRadius="18">
                            <Border BorderBrush="White" BorderThickness="5" CornerRadius="15" >
                                <Border BorderBrush="Black" BorderThickness="2" CornerRadius="12">                                    
                                    <Border.Background>                                        
                                        <ImageBrush Stretch="None" x:Name="imageBrush" TileMode="Tile">                                           
                                        </ImageBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                        </Border>-->
                    </Grid>
                    <!--<Border MaxWidth="1" MaxHeight="1" BorderBrush="Red" BorderThickness="5" CornerRadius="5" Background="Red">
                        <Image Name="image1" Stretch="UniformToFill" />
                    </Border>-->
                    <StackPanel Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Center">
                        
                        <Button Name="processPreviousButton" Click="processPreviousButton_Click">Prev</Button>
                        <Button Name="processPlayPauseButton" Click="processPlayPauseButton_Click" ToolTip="Only for moving images">Play/Pause</Button>
                        <Button Name="processNextButton" Click="processNextButton_Click">Next</Button>
                        <Label>Expression:</Label>
                        <ComboBox IsEditable="True" KeyDown="expressionSelectorComboBox_KeyDown" SelectedIndex="0" HorizontalAlignment="Stretch" Name="expressionSelectorComboBox" ItemsSource="{Binding}" DisplayMemberPath="Expression">

                        </ComboBox>
                        <Button>Save</Button>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Name="expressionsTabItem" Header="Expressions" VerticalAlignment="Stretch">
                <StackPanel VerticalAlignment="Stretch">
                    <Label Margin="6">Please, feel free edit or add your own Expressions!</Label>
                    <toolkit:DataGrid 
                        HorizontalScrollBarVisibility="Visible"
                        VerticalScrollBarVisibility="Visible"
                        RowStyle="{StaticResource RowStyle}"
                        Margin="6"
                        VerticalAlignment="Stretch"
                        AlternatingRowBackground="AntiqueWhite" 
                        CanUserAddRows="True" 
                        CanUserDeleteRows="True" 
                        CanUserSortColumns="True" 
                        Name="dgridExpressions"
                        ItemsSource="{Binding}"
                        AutoGenerateColumns="False"
                        HorizontalGridLinesBrush="AntiqueWhite"
                        VerticalGridLinesBrush="AntiqueWhite" 
                        GridLinesVisibility="All"
                        HeadersVisibility="All">

                        <toolkit:DataGrid.RowValidationRules>
                            <local:DataRowValidation ValidationStep="UpdatedValue" />
                        </toolkit:DataGrid.RowValidationRules>

                        <toolkit:DataGrid.Columns>
                            <!--<toolkit:DataGridTextColumn Header="ID" Binding="{Binding Path=ExpressionOID}" IsReadOnly="True"/>-->
                            <toolkit:DataGridTextColumn Header="Name" Binding="{Binding Path=Expression}" />
                            <!--<toolkit:DataGridTextColumn Header="EmoticonID" Binding="{Binding Path=EmoticonOID}" />-->
                        </toolkit:DataGrid.Columns>
                    </toolkit:DataGrid>
                </StackPanel>
            </TabItem>
            <TabItem Name="trainingDatasetsTabItem" Header="Training Datasets">
                <StackPanel>
                    <Label Margin="6">Please, feel free to manually edit or review your trainings!</Label>
                    <toolkit:DataGrid 
                        HorizontalScrollBarVisibility="Visible"
                        VerticalScrollBarVisibility="Visible"
                        RowStyle="{StaticResource RowStyle}"
                        Margin="6"
                        VerticalAlignment="Stretch"
                        AlternatingRowBackground="AntiqueWhite" 
                        CanUserAddRows="True" 
                        CanUserDeleteRows="True" 
                        CanUserSortColumns="True" 
                        Name="dgridTraining"
                        ItemsSource="{Binding}"
                        AutoGenerateColumns="False"
                        HorizontalGridLinesBrush="AntiqueWhite"
                        VerticalGridLinesBrush="AntiqueWhite" 
                        GridLinesVisibility="All"
                        HeadersVisibility="All"
                        >

                        <toolkit:DataGrid.RowValidationRules>
                            <local:DataRowValidation ValidationStep="UpdatedValue" />
                        </toolkit:DataGrid.RowValidationRules>

                        <toolkit:DataGrid.Columns>
                            <!--<toolkit:DataGridTextColumn Header="ID" Binding="{Binding Path=TrainingOID}" IsReadOnly="True"/>-->
                            <toolkit:DataGridTemplateColumn Header="Expression">
                                <toolkit:DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding ElementName=dataSet.Expression, Path=ExpressionColumn}"></ComboBox>
                                    </DataTemplate>
                                </toolkit:DataGridTemplateColumn.CellEditingTemplate>
                                <toolkit:DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=ExpressionOID}" />
                                    </DataTemplate>
                                </toolkit:DataGridTemplateColumn.CellTemplate>
                            </toolkit:DataGridTemplateColumn>
                            <toolkit:DataGridTextColumn Header="Image" Binding="{Binding Path=ImageOID}" />
                            <!-- Use Text="{Binding Date, StringFormat=f}" for float vars -->
                            <!--<toolkit:DataGridTextColumn Header="EmoticonID" Binding="{Binding Path=EmoticonOID}" />-->
                        </toolkit:DataGrid.Columns>
                    </toolkit:DataGrid>
                </StackPanel>
            </TabItem>
            <TabItem Name="exportTabItem" Header="Export">
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <GroupBox Header="Export Training Dataset to" Margin="6">
                        <StackPanel Orientation="Vertical">
                            <Button Margin="6">Excel</Button>
                            <Button Margin="6">CSV</Button>
                            <Button Margin="6">XML</Button>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Export Expressions to" Margin="6">
                        <StackPanel Orientation="Vertical">
                            <Button Margin="6">Excel</Button>
                            <Button Margin="6">CSV</Button>
                            <Button Margin="6">XML</Button>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </TabItem>
            <TabItem Name="annConfigurationTabItem" Header="Artifical Neural Network Configuration" VerticalAlignment="Stretch">
                <Grid Name="annGrid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <StackPanel  HorizontalAlignment="Center">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <Button Grid.Column="0" Grid.Row="0" Name="loadAnnButton" ToolTip="Click here to load an ANN you have already saved." Click="loadAnnButton_Click" Margin="6">Load</Button>
                            <Button Grid.Column="1" Grid.Row="0" Name="saveAnnButton" ToolTip="Click here, when you are done configuring your neural network. You can use it later for training and after that to process image feature points." Click="saveAnnButton_Click" Margin="6">Save</Button>
                            <!--<Label Grid.Column="0" Grid.Row="1">Num Layers:</Label>
                            <Label Name="annNumLayers" Grid.Column="2" Grid.Row="1" Content="{Binding Path=NumLayers}"></Label>-->
                            <Label Margin="6" Grid.Column="0" Grid.Row="1">Activation Function:</Label>
                            <ComboBox Margin="6"  Grid.Column="1" Grid.Row="1" Name="annActivation">
                                <ComboBoxItem Name="identity">Identity</ComboBoxItem>
                                <ComboBoxItem Name="sigmoid" IsSelected="True">Sigmoid</ComboBoxItem>
                                <ComboBoxItem Name="gaussian">Gaussian</ComboBoxItem>
                            </ComboBox>
                            <Button Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" Name="applyAnnSettings" Margin="6" Click="applyAnnSettings_Click">Apply hidden layers</Button>
                            <toolkit:DataGrid  Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="2"                            
                            RowStyle="{StaticResource RowStyle}"
                            Margin="6"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            MinHeight="90"
                            AlternatingRowBackground="AntiqueWhite" 
                            CanUserAddRows="True" 
                            CanUserDeleteRows="True" 
                            CanUserSortColumns="False" 
                            Name="dgridHiddenLayer"
                            ItemsSource="{Binding}"
                            HorizontalGridLinesBrush="AntiqueWhite"
                            VerticalGridLinesBrush="AntiqueWhite" 
                            HorizontalScrollBarVisibility="Visible"
                            VerticalScrollBarVisibility="Visible"
                            GridLinesVisibility="All"
                            HeadersVisibility="All"
                            SelectionMode="Single"
                            AutoGenerateColumns="False">

                                <toolkit:DataGrid.Columns>
                                    <toolkit:DataGridTextColumn Header="Neurons on hidden layer" Binding="{Binding Path=Neurons}" />
                                </toolkit:DataGrid.Columns>

                            </toolkit:DataGrid>
                        </Grid>
                    </StackPanel>
                    <Border Name="annBorder" Grid.Column="1" Margin="6" BorderBrush="DimGray" BorderThickness="5" Background="DimGray" CornerRadius="5">
                        <Canvas Name="annCanvas" Background="DimGray" SizeChanged="annCanvas_SizeChanged"></Canvas>
                    </Border>
                </Grid>
            </TabItem>
        </TabControl>



    </Grid>
</Window>
