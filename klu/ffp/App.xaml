<Application x:Class="ffp.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    StartupUri="MainWindow.xaml"
    xmlns:toolkit="http://schemas.microsoft.com/wpf/2008/toolkit"             
    xmlns:local="clr-namespace:ffp">
    <Application.Resources>

        <ResourceDictionary>
            <local:ExpressionIDToTextConverter x:Key="ExpressionIDToTextConverter" />
            <local:ImageToBinaryConverter x:Key="ImageToBinaryConverter" />
            <local:ExpressionComboBoxConverter x:Key="ExpressionComboBoxConverter" />
            <local:ExpressionIDToImageConverter x:Key="ExpressionIDToImageConverter" />

            <Style TargetType="{x:Type ListViewItem}">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            </Style>

            <DropShadowEffect x:Key="DropShadowEffect"
                Opacity="1"
                ShadowDepth="1"
                Color="Black"
                BlurRadius="20"/>
            
            <Style x:Key="MyDataGridCellStyle" TargetType="{x:Type toolkit:DataGridCell}">
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style x:Key="MyDataGridStyle" TargetType="{x:Type toolkit:DataGrid}">
                <Setter Property="AlternatingRowBackground">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0.0" EndPoint="0.5,1.0">
                            <GradientStop Color="#FFFEFEFF" Offset="0"/>
                            <GradientStop Color="#FFE4F0FC" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.0,0.0" EndPoint="0.0,1.0">
                            <GradientStop Color="#FFFEFEFF" Offset="0"/>
                            <GradientStop Color="#FFE4F0FC" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="HorizontalGridLinesBrush" Value="LightGray" />
                <Setter Property="VerticalGridLinesBrush" Value="LightGray" />
                <Setter Property="GridLinesVisibility" Value="Horizontal" />
                <Setter Property="HeadersVisibility" Value="All" />
                <Setter Property="VerticalAlignment" Value="Stretch" />            

                <Setter Property="CellStyle" Value="{StaticResource MyDataGridCellStyle}"/>
                
                <!--<Setter Property="ColumnHeaderStyle" Value="{StaticResource ColumnHeaderStyle}">
                </Setter>-->
            </Style>
            
            <!-- For DataGrid Validation. -->
            
            <Style x:Key="RowStyle" TargetType="{x:Type toolkit:DataGridRow}">                    
                <Setter Property="ValidationErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid>
                                <Image Source="/ffp;component/img/Alert007.png" Width="12" Height="12" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"></Image>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="BorderThickness" Value="2"/>
                        <Setter Property="BorderBrush" Value="Red"/>
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ImageButton" TargetType="{x:Type Button}">
                <Setter Property="Padding" Value="6,0,6,0"></Setter>
            </Style>

        </ResourceDictionary>        
        
    </Application.Resources>
</Application>
